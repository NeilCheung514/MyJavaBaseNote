复习:
	1.异常:为了方便来进行反馈和处理问题---Throwable
		Error---错误.一旦出现无法处理
		Exception---异常.出现之后可以处理
			编译时异常(checked exception):在编译的时候出现,要求必须处理
			运行时异常(unchecked exception):在运行的时候出现,可以处理但是也可以不处理---RunTimeException
			异常捕获的三种方式:单个处理,统一处理,分批处理
			finally---配合try块使用---无论是否出现异常都会执行一次
	2.断言:用assert来声明---预测结果---需要使用参数-ea来开启断言

集合
	存储多个数据的容器---大小不固定
	Collection<E>---Java中集合的顶级接口
		<E>---泛型---用于定义存储的元素类型---由于泛型的限制,要求集合中只能存储引用类型的数据
		String[] arr;---arr的数据类型是数组,arr的元素类型是String
		Collection<String> c;---c的数据类型是Collection,c的元素类型是String
		集合中同一个对象的哈希码一直在改变

List---列表
	保证元素的存储顺序---有序;有下标---存储重复的元素---List是有序可重复的集合

	ArrayList
		底层用数组存储数据---内存是连续的,默认初始容量为10,每次默认在上一次的长度的基础上增加一半,底层是基于右移运算来实现的---是一个线程不安全的集合
		便于查询元素不便于增删元素
		练习:用数组实现一个低配版的ArrayList
		练习:用数组实现一个几个,这个集合之后能从两端添加或者是获取元素---双向队列Deque
			addFirst,addLast,getFirst,getLast

	LinkedList---链表
		底层是基于链表(节点---Node)来实现的---内存是不连续的,没有初始容量,不需要考虑扩容问题
		是一个线程不安全的集合
		便于增删元素,不便于查询元素

	考虑:在添加元素的时候,ArrayList和LinkedList的效率
		在增删的位置相对靠前的时候,LinkedList会效率较高;在增删的位置相对靠后的时候,ArrayList效率更高

	练习:疯狂值

Vector
	向量---基于数组来实现的.内存是连续的空间.默认初始容量是10,默认每次容量翻倍.基于三元运算实现运算.是一个线程安全的集合.

Static
	栈---Vector的子类,遵循先进后出原则(LIFO)
	向栈中放入元素---入栈/压栈,从栈中去除元素---出栈/弹栈
	最先放入栈中的元素---栈底元素,最后放入栈中的元素---栈顶元素

任务:跳跃表(性能、复杂度);最小栈(手写,用数组实现);利用Node节点实现简易版LinkedList;

一个数组长度为99,里面存放了1-100中的99个元素,数字存放的时候是无序的,找到没有存放的数字---O(n),O(1)